import { IApp } from '@/types/nuxt'
import { I<%= ClassName %>Props } from '@/entities/<%= ClassName %>'
<%_ if (auth) { _%>
import refresh from '@/utils/refresh'
<%_ } _%>

export default class Delete<%= ClassName %>UseCase implements BaseUseCase {
  App: IApp
  constructor(app: IApp) {
    this.App = app
  }

  async execute(props: I<%= ClassName %>Props) {
    try {
      if (!this.App.data.removing) {
        this.App.data.removing = true
        <%_ if (auth) { _%>
        await refresh(this.App)
        <%_ } _%>
        await this.App.<%= appName %>Gateway.<%= ClassName %>.Delete<%= ClassName %>(props)
      }
    } catch (exception: any) {
      this.App.logService.handle(exception)
      return false
    } finally {
      this.App.data.removing = false
    }
    return true
  }
}
