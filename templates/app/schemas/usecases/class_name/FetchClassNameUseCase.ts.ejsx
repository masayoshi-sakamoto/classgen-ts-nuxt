import { IApp } from '@/types/nuxt'
<%_ if (auth) { _%>
import refresh from '@/utils/refresh'
<%_ } _%>

export default class Fetch<%= ClassNames %>UseCase implements BaseUseCase {
  App: IApp
  constructor(app: IApp) {
    this.App = app
  }

  async execute() {
    try {
      if (!this.App.data.loading) {
        this.App.data.loading = true
        <%_ if (auth) { _%>
        await refresh(this.App)
        <%_ } _%>
        const response = await this.App.<%= appName %>Gateway.<%= ClassName %>.Fetch<%= ClassName %>(this.App.<%= className %>.options)
        this.App.<%= className %>.fetched = response.items
        this.App.<%= className %>.query = response.query
        this.App.<%= className %>.options = {
          ...this.App.<%= className %>.options,
          ...response.options
        }
      }
    } catch (exception: any) {
      this.App.logService.handle(exception)
      return false
    } finally {
      this.App.data.loading = false
    }
    return true

  }
}
