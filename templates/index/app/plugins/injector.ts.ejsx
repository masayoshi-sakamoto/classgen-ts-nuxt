/* eslint-disable */
import { Context } from '@nuxt/types/app'
import Vue from 'vue'

<%_ paths['gateways'].dirs.forEach((gateway) => { _%>
import { APIClient as <%= gateway.name %>APIClient } from '@/infrastructure/network/<%= gateway.name %>/APIClient'
<%_ }); _%>

// Repositories
import AppRepository from '@/repositories/AppRepository'
<%_ paths['repositories'].files.forEach((file) => {
  const repository = file.split('.')[0]
  if (repository !== 'AppRepository') {
_%>
import <%= repository %> from '@/repositories/<%= repository %>'
<%_ }}); _%>

// Gateways
<%_ paths['gateways'].dirs.forEach((gateway) => { _%>
import <%= gateway.name %>Gateway from '@/gateways/<%= gateway.name %>'
<%_ }); _%>

export default (ctx: Context) => {
  const { store, app } = ctx
  <%_ paths['gateways'].dirs.forEach((gateway) => { _%>
  const <%= lowerCamel(gateway.name) %>APIClient = new <%= gateway.name %>APIClient(ctx)
  <%_ }); _%>

  Vue.prototype.App = {
    state: new AppRepository(app.$cookies, store),
    <%_ paths['repositories'].files.forEach((file) => {
      const repository = file.split('.')[0]
      if (repository !== 'AppRepository') {
        const word = lowerCamel(repository.split('Repository')[0])
    _%>
    <%= word %>: new <%= repository %>(app.$cookies, store),
    <%_ }}); _%>
    <%_ paths['gateways'].dirs.forEach((gateway) => { _%>
    <%= lowerCamel(gateway.name) %>Gateway: new <%= gateway.name %>Gateway(<%= lowerCamel(gateway.name) %>APIClient),
    <%_ }); _%>
  }

  ctx.App = {
    state: new AppRepository(app.$cookies, store),
    <%_ paths['repositories'].files.forEach((file) => {
      const repository = file.split('.')[0]
      if (repository !== 'AppRepository') {
        const word = lowerCamel(repository.split('Repository')[0])
    _%>
    <%= word %>: new <%= repository %>(app.$cookies, store),
    <%_ }}); _%>
    <%_ paths['gateways'].dirs.forEach((gateway) => { _%>
    <%= lowerCamel(gateway.name) %>Gateway: new <%= gateway.name %>Gateway(<%= lowerCamel(gateway.name) %>APIClient),
    <%_ }); _%>
  }
}
