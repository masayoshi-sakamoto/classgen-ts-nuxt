<template>
  <TtemplateList
    :items="App.<%= className %>.entities"
    :options.sync="App.<%= className %>.options"
    :query="App.<%= className %>.query"
    :headers="headers"
    disabled-click
    @fetch="params"
  >
  </TtemplateList>
</template>

<script lang="ts">
import Vue from 'vue'
import TtemplateList from '@/components/templates/List'
import { I<%= ClassName %>Props, headers } from '@/entities/<%= ClassName %>'
import Fetch<%= ClassName %>UseCase from '@/usecases/<%= className %>/Fetch<%= ClassName %>UseCase'

interface IData {
  headers: { text: string; value: any }[]
  value: I<%= ClassName %>Props | undefined
}

export default Vue.extend({
  components: {
    TtemplateList
  },
  data(): IData {
    return {
      headers,
      value: undefined
    }
  },
  async fetch() {
    this.App.<%= className %>.options = {
      ...this.$route.query
    }
    await this.fetch()
  },
  methods: {
    async params() {
      this.$router.push({
        path: this.$route.path,
        query: { ...this.App.<%= className %>.options } as any
      })
      await this.fetch()
    },
    async fetch() {
      this.App.data.loading = true
      this.App.<%= className %>.response(await new Fetch<%= ClassName %>UseCase(this.App).execute(this.App.<%= className %>.options))
      this.App.data.loading = false
    }
  }
})
</script>
